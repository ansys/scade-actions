# Copyright (C) 2024 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# tests-pytest
# action derived from ansys/actions/tests-pytest
name: 'Run the test suite for a given Python interpreter'

description: >
  The ``tests-pytest`` action runs the test suite for a Python library and a
  given Python interpreter using `pytest <https://docs.pytest.org/en/stable/>`_.
  This action accepts markers, options, and post arguments to pass to
  ``pytest`` before executing the test session.

inputs:

  python-dir:
    description: >
      Directory of the Python interpreter.
    required: true

  # Optional inputs
  library-dir:
    description: >
      Directory of the library to test.
    default: '.'
    required: false

  pytest-markers:
    description: >
      Set of `pytest markers
      <https://docs.pytest.org/en/stable/example/markers.html>`_ in the form of
      a string. These markers are used to discretize tests when running the test
      session.
    default: ''
    required: false

  pytest-extra-args:
    description: >
      Set of additional ``pytest`` arguments in the form of a string.
    default: ''
    required: false

  pytest-postargs:
    description: >
      Directory of the test suite and the level of verbosity.
    default: 'tests -vv'
    required: false

  checkout:
    description: >
      Whether to clone the repository in the CI/CD machine.
    default: 'true'
    required: false

runs:
  using: "composite"
  steps:

    - name: "Install Git and clone project"
      uses: actions/checkout@v4
      if: ${{ inputs.checkout == 'true' }}

    - name: "Pass Inputs to Shell"
      shell: cmd
      run: |
        :: Pass inputs to the shell
        echo INPUT_PYTHON_DIR=${{ inputs.python-dir }}>> %GITHUB_ENV%

    - name: "Check python"
      shell: cmd
      run: |
        :: Check python
        echo Activate the environment %INPUT_PYTHON_DIR%
        call %INPUT_PYTHON_DIR%\activate.bat
        python.exe --version
        :: store the "exe for the next steps"
        echo PYTHON_EXE=%INPUT_PYTHON_DIR%\python.exe>> %GITHUB_ENV%

    - name: "Update pip"
      shell: cmd
      run: |
        %PYTHON_EXE% -m pip install -U pip

    - name: "Install Python library"
      shell: cmd
      run: |
        %PYTHON_EXE% -m pip install ${{ inputs.library-dir }}

    - name: "Check if requirements_tests.txt file exists"
      shell: cmd
      run: |
        :: Check if requirements_tests.txt file exists
        if exist {{ inputs.library-dir }}/requirements/requirements_tests.txt (
          echo Installing test dependencies from requirements_tests.txt
          %PYTHON_EXE% -m pip install -r %GITHUB_WORKSPACE%\${{ inputs.library-dir }}/requirements/requirements_tests.txt
        ) else (
          echo Installing test dependencies from pyproject.toml
          %PYTHON_EXE% -m pip install ${{ inputs.library-dir }}[tests]
        )

    - name: "Executing test suite"
      shell: cmd
      run: |
        :: Run tests
        %PYTHON_EXE% -m pytest ${{ inputs.pytest-markers }} ${{ inputs.pytest-extra-args }} ${{ inputs.pytest-postargs }}
