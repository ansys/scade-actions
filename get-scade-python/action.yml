# Copyright (C) 2024 ANSYS, Inc. and/or its affiliates.
# SPDX-License-Identifier: MIT
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# get-scade-python
name: 'Retrieve the Python installation installed with Ansys SCADE'

description: >
  A GitHub action that takes as input an Ansys SCADE installation directory
  and returns the name and path to the corresponding Python installation.

inputs:

  scade-dir:
    description: >
      Ansys SCADE Installation directory. for instance
      ``'C:\Program Files\Ansys Inc\v231\SCADE'``.
    required: true

outputs:

  python-name:
    description: >
      Name of the directory containing python.exe.
    value: ${{ steps.get.outputs.python-name }}

  python-dir:
    description: >
      Directory containing python.exe.
    value: ${{ steps.get.outputs.python-dir }}

  python-version:
    description: >
      Version of python.exe, two digits.
    value: ${{ steps.get.outputs.python-version }}

author: 'ESEG'
runs:
  using: composite
  steps:

  - name: "Pass Inputs to Shell"
    id: set
    shell: cmd
    run: |
      :: Pass Inputs to Shell
      echo INPUT_SCADE_DIR=${{ inputs.scade-dir }}>> %GITHUB_ENV%

  - name: "Retrieve Python name/directory/version"
    id: get
    shell: cmd
    run: |
      :: Retrieve Python name/directory
      setlocal ENABLEDELAYEDEXPANSION
      echo Get Python interpreter for "%INPUT_SCADE_DIR%"
      set PYTHON_VERSION=0
      for /f "usebackq" %%A in (`dir /B "%INPUT_SCADE_DIR%\contrib\Python*"`) do (
          set CURRENT_VERSION=%%A
          set CURRENT_VERSION=!CURRENT_VERSION:Python=%!
          if !CURRENT_VERSION! GTR !PYTHON_VERSION! (
              set PYTHON_VERSION=!CURRENT_VERSION!
          )
      )
      set PYTHON_NAME=Python%PYTHON_VERSION%
      echo Python name="%PYTHON_NAME%"
      echo python-name=%PYTHON_NAME%>> %GITHUB_OUTPUT%
      set PYTHON_DIR=%INPUT_SCADE_DIR%\contrib\%PYTHON_NAME%
      echo Python directory="%PYTHON_DIR%"
      echo python-dir=%PYTHON_DIR%>> %GITHUB_OUTPUT%
      for /f "usebackq tokens=2,3 delims=. " %%A in (`"%PYTHON_DIR%\python" --version`) do (set PYTHON_VERSION=%%A.%%B)
      echo Python version="%PYTHON_VERSION%"
      echo python-version=%PYTHON_VERSION%>> %GITHUB_OUTPUT%
